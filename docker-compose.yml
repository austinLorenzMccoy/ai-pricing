version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      # Add build args if needed
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: rwa-ai-pricing
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./data:/app/data:rw
      - ./models:/app/models:rw
      - ./logs:/app/logs:rw
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - ENVIRONMENT=production
      - DEBUG=False
      - HOST=0.0.0.0
      - PORT=8000
    networks:
      - ai-pricing-network
    deploy:
      resources:
        limits:
          memory: 4G

  # Vector database for embeddings and similarity search
  vector_db:
    image: redis/redis-stack:latest
    container_name: rwa-ai-pricing-vectordb
    ports:
      - "6379:6379"  # Redis port
      - "8001:8001"  # RedisInsight UI
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - ai-pricing-network

  # Uncomment to add a PostgreSQL database if needed
  # db:
  #   image: postgres:14-alpine
  #   container_name: rwa-ai-pricing-db
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=rwa_pricing
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks:
  #     - ai-pricing-network

volumes:
  redis_data:
    driver: local
  # Uncomment if using a database
  # postgres_data:
  #   driver: local

networks:
  ai-pricing-network:
    driver: bridge
